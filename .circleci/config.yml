version: 2.1
orbs:
  node: circleci/node@5.0.2
#  heroku: circleci/heroku@1.2.6

parameters:
  BOT_EMAIL: 
    type: string
    default: "current"
  BOT_USERNAME: 
    type: string
    default: "current"
  DOCKER_USERNAME: 
    type: string
    default: "ctnantiphat"
  DOCKER_REGISTRY: 
    type: string
    default: "krypto-image"
  DOCKER_USER: 
    type: string
    default: "ctnantiphat"
  DOCKER_PASS: 
    type: string
    default: "cC26042541"

jobs:
  Build_And_Test:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run test
          name: Run tests
      - run:
          command: npm run build
          name: Build app
  Build_Container:
    docker:
      - image: public.ecr.aws/kubeopsskills/circleci:1.0.0-docker-gcloud
    steps:
      - checkout
      - run:
          name: Login Docker By Username Docker Registry
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Build Image And Push Image To Registry DockerHub
          command: |
            echo "export COMMIT_ID=$(git log --format="%H" -n 2 | head -n 1)"
            docker build -t $<< pipeline.parameters.DOCKER_USERNAME >>/<< pipeline.parameters.DOCKER_REGISTRY >>:$COMMIT_ID .
            docker push $<< pipeline.parameters.DOCKER_USERNAME >>/<< pipeline.parameters.DOCKER_REGISTRY >>:$COMMIT_ID

#  deploy: # this can be any name you choose
#    executor: heroku/default
#    steps:
#      - attach_workspace:
#          at: ~/project
#      - heroku/deploy-via-git:
#          force: true # force push when pushing to the heroku remote, see: 

workflows:
  Build_Test_Deploy:
    jobs:
      - Build_And_Test:
          filters:
            branches:
              only: main
      - Build_Container:
          requires:
            - Build_And_Test

#      - deploy:
#          requires:
#            - build_and_test # only deploy if the build_and_test job has completed
#          filters:
#            branches:
#              only: main # only deploy when on main